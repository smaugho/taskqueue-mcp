---
description: Workflow to follow for the Job / Project Category - New Use Case
globs:
alwaysApply: false
---

```mermaid
flowchart TD
    A(Plan Review #1) --> C[Component Batch #1 R/G/R];
    C -- Changes Verified --> C_CommitConfirm{Confirm & Commit Batch #1};
    C_CommitConfirm --> D(Plan Review #2);
    D -- Creates Tasks --> E[Component Batch #2 R/G/R];
    E -- Changes Verified --> E_CommitConfirm{Confirm & Commit Batch #2};
    E_CommitConfirm --> F(...);
    F --> G(Plan Review #n);
    G -- Creates Task --> H[✅ Review Documentation];
    H -- Docs Updated --> H_CommitConfirm{Confirm & Commit Documentation};

    style A fill:#f9f,stroke:#333,stroke-width:2px
    style D fill:#f9f,stroke:#333,stroke-width:2px
    style G fill:#f9f,stroke:#333,stroke-width:2px
```

- **Task **`Plan Review #1`**: Analyse the bug/modification, identify affected layers, propose `Component Batch #1 (Red/Green/Refactor)` + `Plan Review #2` **ONLY after perform the reference Gathering for New Tasks**; present analysis & await confirmation; upon confirmation, add tasks and record.
- **Task **`Component Batch #n – Red/Green/Refactor`**:
    - **Red:** failing unit/integration test reproducing bug or specifying modified behaviour.
    - **Green:** minimal fix + validation.
    - **Refactor:** behaviour‑preserving improvements, removal of obsolete code/tests.
    - After validation, propose commit (include `.tasks.json`), await confirmation, commit, record hash.
- **Task **`Plan Review #n (n>1)`**: Run tests, decide whether goal met; propose next steps or `Review Documentation`; present analysis & await confirmation; after confirmation, add tasks & record.
- **Task **`Review Documentation`**: Update docs/rules accordingly; propose commit, await confirmation, commit, record hash.